image: "registry.gitlab.com/querl.dox/js/build:latest"

cache:
  paths:
    - ./node_modules
    #- ./vendor

stages:
  - test
  - build
  - deploy

variables:
  CI_GIT_TOKEN: "_zZas_5s8Rxs35Qe_RyS"
  DEV_DIR: "./dev"
  PUB_DIR: "./public"
  J2_IN: "src/templates/simple.j2"
  J2_DATA: "src/templates/t1.yaml"
  J2_OUT: "$DEV_DIR/simple.html"
  J2_FORMAT: "yaml"
  
before_script:
  - git config --global credential.helper cache
  - git config --global user.email querl.dox.protonmail.com
  - git config --global user.name querl.dox

version_check:
  stage: test
  environment:
    name: development
  when: manual
  script:
    - node --version
    - npm --version
    - babel --version
    - node-sass --version
    - coffee --version
    - terser --version
    - tsc --version

jinja2_blog:
  variables:
    J2_IN: "src/templates/index.html"
    J2_DATA: "src/templates/blog.yaml"
    J2_OUT: "$DEV_DIR/index.html"
    J2_FORMAT: "yaml"
  when: manual
  artifacts:
    name: "jinja_template"
    expire_in: "1 day"
    paths:
      - $DEV_DIR
  image: "registry.gitlab.com/querl.dox/python/build:jinja2"
  stage: build
  script:
    - jinja2 $J2_IN $J2_DATA --outfile=$J2_OUT
    - ls -a -R "$DEV_DIR"

jinja2:
  when: manual
  artifacts:
    name: "jinja_template"
    expire_in: "1 day"
    paths:
      - $DEV_DIR
  image: "registry.gitlab.com/querl.dox/python/build:jinja2"
  stage: build
  script:
    - jinja2 $J2_IN $J2_DATA --outfile=$J2_OUT --format=$J2_FORMAT
    - ls -a -R "$DEV_DIR"
  #only:
  #  changes:
  #  - src/templates/*.{j2}
    
code_review:
  artifacts:
    name: "code_review"
    expire_in: "1 day"
    paths:
      #- $PUB_DIR
      #- $DEV_DIR
  variables:
    CI_COMMIT_TAG: "code_review"
  stage: build
  script: 
    - cp -R ./src/assets $DEV_DIR/assets
    - cp -R ./src/assets $PUB_DIR/assets
    - tsc --showConfig true --project pages-tsconfig.json
    - tsc --project pages-tsconfig.json
    - tsc --showConfig true --project dev-tsconfig.json
    - tsc --project dev-tsconfig.json
    - ls -a -R "$DEV_DIR"
    - ls -a -R "$PUB_DIR"
    - git add .
    - git commit -m "Typescript Project Code Review"
    - git push --force "https://${GITLAB_USER_NAME}:${CI_GIT_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:$CI_COMMIT_TAG"
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /code review/   

pages:
  when: manual
  artifacts:
    name: "pages"
    expire_in: "1 day"
    paths:
      - public
  cache:
    paths:
      - ./vendor
  stage: deploy
  script: 
    - cp ./src/index.html $PUB_DIR/index.html
    - tsc --project pages-tsconfig.json --showConfig true
    - tsc --project pages-tsconfig.json
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /pages/   
