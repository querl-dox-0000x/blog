image: "registry.gitlab.com/querl.dox/js/build:latest"

cache:
  paths:
    - ./node_modules
    - ./vendor

stages:
  - development
  - test
  - build
  - deploy

variables:
  CI_GIT_TOKEN: "_zZas_5s8Rxs35Qe_RyS"
  DEV_DIR: "./dev"
  PROD_DIR: "./production"
  
before_script:
  - git config --global credential.helper cache
  - git config --global user.email querl.dox.protonmail.com
  - git config --global user.name querl.dox

version_check:
  stage: test
  environment:
    name: development
  when: manual
  script:
    - node --version
    - npm --version
    - babel --version
    - node-sass --version
    - coffee --version
    - terser --version
    - tsc --version
    
typescript_compile:
  artifacts:
    name: "tsc"
    expire_in: "1 day"
    paths:
      - "$DEV_DIR/scripts"
  variables:
    TSC_FILE: "./src/scripts/greeter.ts"
    TSC_DIAG: "--diagnostics true"
    TSC_DIAG_VERBOSE: "--extendedDiagnostics true"
    TSC_LS_FILES: "--listFiles true"
    TSC_OUT_DIR: "--outDir $DEV_DIR/scripts"
    TSC_OUT_FILE: "--outFile compiled.js"
    TSC_PRETTY: "--pretty true"
    TSC_SHOW_CFG: "--showConfig false"
    TSC_SRC_MAP: "--sourceMap true"
    TSC_TARGET: "--target ESNext"
  stage: test
  environment:
    name: development
  when: manual
  script:
    #- tsc $TSC_DIAG $TSC_DIAG_VERBOSE $TSC_LS_FILES $TSC_OUT_DIR $TSC_OUT_FILE $TSC_PRETTY $TSC_SHOW_CFG $TSC_SRC_MAP $TSC_TARGET $TSC_FILE
    - tsc $TSC_DIAG $TSC_DIAG_VERBOSE $TSC_LS_FILES $TSC_PRETTY $TSC_OUT_DIR $TSC_SHOW_CFG $TSC_SRC_MAP $TSC_TARGET $TSC_FILE
    - ls -a -R "$DEV_DIR"
    - ls -a -R "./src/scripts"
    
terser:js:devlopment:
  when: manual
  stage: build
  environment:
    name: development
  script: 
    - terser ./dev/scripts/entity/panel.js ./dev/scripts/entity/task.js ./dev/scripts/app/init.js ./dev/scripts/app/main.js --verbose --ecma 8 --output ./dev/scripts/compiled.js
    - ls -a -R ./dev/scripts


code_review:
  artifacts:
    name: "code_review"
    expire_in: "1 day"
    paths:
      - ./prod/
      - ./dev/
  variables:
    CI_COMMIT_TAG: "code_review"
  when: manual
  stage: build
  script: 
    - cp ./src/index.html ./dev/index.html
    - cp ./src/index.html ./prod/index.html
    - coffee --compile --map --output dev/scripts/ src/coffee/ 
    - coffee --compile --map --output prod/scripts/ src/coffee/ 
    - node-sass --source-map true --output-style nested --output ./dev/styles src/styles/sass/main.scss
    - node-sass --source-map true --output-style nested --output ./public/styles src/styles/sass/main.scss
    - ls -a -R ./prod/
    - ls -a -R ./dev/
    - git add .
    - git commit -m "Javascript Project Code Review"
    - git push --force "https://${GITLAB_USER_NAME}:${CI_GIT_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:$CI_COMMIT_TAG"

live_reload:
  variables:
    CI_COMMIT_TAG: "live_reload"
  when: manual
  stage: build
  script: 
    - cp ./src/index.html ./prod/index.html
    - coffee --compile --map --output prod/scripts/ src/coffee/ 
    - node-sass --source-map true --output-style nested --output ./public/styles src/styles/sass/main.scss
    - ls -a -R ./prod/
    - git add .
    - git commit -m "Javascript Project Code Review"
    - git push --force "https://${GITLAB_USER_NAME}:${CI_GIT_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:$CI_COMMIT_TAG"

pages:
  artifacts:
    name: "pages"
    expire_in: "1 day"
    paths:
      - public
  cache:
    paths:
      - ./vendor
  stage: deploy
  script: 
    - cp ./src/index.html ./public/index.html
    - coffee --compile --map --output public/scripts/ src/coffee/ 
    - node-sass --source-map true --output-style nested --output ./public/styles src/styles/sass/main.scss
  only:
    - live_reload
